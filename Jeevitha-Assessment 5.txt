Qn1.
To create table with same structure with data
CREATE TABLE customers_payment AS SELECT * FROM customer_details;


Qn2.
To create table with same structure without data
CREATE TABLE customer_payment SELECT * FROM customer_details WHERE 'X' ='Y';
SELECT * FROM new_table;


Qn3.
i)Fetching Last 10 records from Student table
SELECT * FROM  ( 
SELECT * FROM Student ORDER BY Student_ID DESC LIMIT 10) Var1 ORDER BY Student_ID ASC;
ii)Maximum salary and minimum salary of Employee
SELECT Employee_name,MAX(salary), MIN(salary)
FROM Employees;


Qn4.

user shopping template='''
   SELECT
   user_id
    ,count(*) as num shopping
    ,sum(amount) as total amount
    FROM
      shopping
    WHERE
      user_id = 1234
    AND  shopping_date = '2015-11-12'
    GROUP BY
     user_id

     items = {
    'user_id': 1080,
     "shopping_date': '2019-08-22'
}

    J=Jinja_SQL(item_style='pyformat')
    query,bind item=j.prepare_query(user shopping template, items)

   print(query)


Qn5. 
Students whose name starts with P and surname starts with S.
SELECT * FROM STUDENTS 
where firstname LIKE 'P%' AND surname LIKE 'S%';


Qn6. 
Create Table Student(Student_ID int, first_name varchar(40), last_name varchar(40), age int);
SELECT TOP 1 first_name, last_name from Student order by Student_ID Desc;// based on ID
SELECT LAST() FROM Student;//last record in the table


Qn7.
Example with Sample Data for Common Table Expression
CREATE TABLE Employees(
    EmployeeID int NOT NULL PRIMARY KEY,
    FirstName varchar(50) NOT NULL,
    LastName varchar(50) NOT NULL,
    ManagerID int NULL
)
INSERT INTO Employees VALUES(1,'Varsha','Wali',NULL)
INSERT INTO Employees VALUES(2,'Laxman','Dixit',1)
INSERT INTO Employees VALUES(3,'Varsha','Paran',1)
INSERT INTO Employees VALUES(4,'Disha','Sharma',2)
INSERT INTO Employees VALUES(5,'Govind','Kumar',2)
INSERT INTO Employees VALUES(6,'Bhargav','Kumar',3)
INSERT INTO Employees VALUES(7,'Nirupama','Ponnapudi',3)
INSERT INTO Employees VALUES(8,'Amogh','Kumar',5)
INSERT INTO Employees VALUES(9,'Prajna','Bhat',6)
INSERT INTO Employees VALUES(10,'Naga','Sowmya',6)
select *from Employees;
WITH
    cteReports(EmpID, FirstName, LastName, MgrID, EmpLevel)
    AS
    (
        SELECT EmployeeID, FirstName, LastName, ManagerID,1
        From Employees
        Where ManagerID is NULL
        UNION ALL
        SELECT e.EmployeeID, e.FirstName, e.LastName, e.ManagerID, r.EmpLevel + 1
        FROM Employees e 
            INNER JOIN cteReports r 
            ON e.ManagerID = r.EmpID
    )

    SELECT 
        FirstName + ' ' + LastName AS FullName,
        EmpLevel,
        (Select FirstName + ' ' + LastName AS FullName FROM Employees
            WHERE EmployeeID = cteReports.MgrID) AS ManagerID
            From cteReports
            Order BY EmpLevel,MgrID



Qn8.
Give a Example of Trigger Update & Delete Event
TRIGGER:
CREATE TRIGGER [dbo].[Customer_UPDATE]
       ON [dbo].[Customers]
AFTER UPDATE
AS
BEGIN
       SET NOCOUNT ON;
 
       DECLARE @CustomerId INT
       DECLARE @Action VARCHAR(50)
 
       SELECT @CustomerId = INSERTED.CustomerId       
       FROM INSERTED
 
       IF UPDATE(Name)
       BEGIN
              SET @Action = 'Updated Name'
       END
 
       IF UPDATE(Country)
       BEGIN
              SET @Action = 'Updated Country'
       END
 
       INSERT INTO CustomerLogs
       VALUES(@CustomerId, @Action)
END

Delete:
CREATE TRIGGER [dbo].[Customer_DELETE]
       ON [dbo].[Customers]
AFTER DELETE
AS
BEGIN
       SET NOCOUNT ON;
 
       DECLARE @CustomerId INT
 
       SELECT @CustomerId = DELETED.CustomerId       
       FROM DELETED
 
       INSERT INTO CustomerLogs
       VALUES(@CustomerId, 'Deleted')
END